{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\r\n * A grid is used to harmonize negative space in a layout.\r\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf([].concat(SUI.WIDTHS, ['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;","map":{"version":3,"names":["_extends","cx","PropTypes","React","customPropTypes","getElementType","getUnhandledProps","SUI","useKeyOnly","useKeyOrValueAndKey","useMultipleProp","useTextAlignProp","useVerticalAlignProp","useWidthProp","GridColumn","GridRow","Grid","props","celled","centered","children","className","columns","container","divided","doubling","inverted","padded","relaxed","reversed","stackable","stretched","textAlign","verticalAlign","classes","rest","ElementType","createElement","handledProps","Column","Row","propTypes","process","env","NODE_ENV","as","elementType","oneOfType","bool","oneOf","node","string","concat","WIDTHS","multipleProp","TEXT_ALIGNMENTS","VERTICAL_ALIGNMENTS"],"sources":["C:/webdev/school/school-online-project/client/node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport cx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\r\nimport GridColumn from './GridColumn';\r\nimport GridRow from './GridRow';\r\n/**\r\n * A grid is used to harmonize negative space in a layout.\r\n */\r\n\r\nfunction Grid(props) {\r\n  var celled = props.celled,\r\n      centered = props.centered,\r\n      children = props.children,\r\n      className = props.className,\r\n      columns = props.columns,\r\n      container = props.container,\r\n      divided = props.divided,\r\n      doubling = props.doubling,\r\n      inverted = props.inverted,\r\n      padded = props.padded,\r\n      relaxed = props.relaxed,\r\n      reversed = props.reversed,\r\n      stackable = props.stackable,\r\n      stretched = props.stretched,\r\n      textAlign = props.textAlign,\r\n      verticalAlign = props.verticalAlign;\r\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\r\n  var rest = getUnhandledProps(Grid, props);\r\n  var ElementType = getElementType(Grid, props);\r\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\r\n    className: classes\r\n  }), children);\r\n}\r\n\r\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\r\nGrid.Column = GridColumn;\r\nGrid.Row = GridRow;\r\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: PropTypes.elementType,\r\n\r\n  /** A grid can have rows divided into cells. */\r\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\r\n\r\n  /** A grid can have its columns centered. */\r\n  centered: PropTypes.bool,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** Represents column count per row in Grid. */\r\n  columns: PropTypes.oneOf([].concat(SUI.WIDTHS, ['equal'])),\r\n\r\n  /** A grid can be combined with a container to use the available layout and alignment. */\r\n  container: PropTypes.bool,\r\n\r\n  /** A grid can have dividers between its columns. */\r\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\r\n\r\n  /** A grid can double its column width on tablet and mobile sizes. */\r\n  doubling: PropTypes.bool,\r\n\r\n  /** A grid's colors can be inverted. */\r\n  inverted: PropTypes.bool,\r\n\r\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\r\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\r\n\r\n  /** A grid can increase its gutters to allow for more negative space. */\r\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\r\n\r\n  /** A grid can specify that its columns should reverse order at different device sizes. */\r\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\r\n\r\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\r\n  stackable: PropTypes.bool,\r\n\r\n  /** A grid can stretch its contents to take up the entire grid height. */\r\n  stretched: PropTypes.bool,\r\n\r\n  /** A grid can specify its text alignment. */\r\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\r\n\r\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\r\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\r\n} : {};\r\nexport default Grid;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,iBAA1C,EAA6DC,GAA7D,EAAkEC,UAAlE,EAA8EC,mBAA9E,EAAmGC,eAAnG,EAAoHC,gBAApH,EAAsIC,oBAAtI,EAA4JC,YAA5J,QAAgL,WAAhL;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA;AACA;AACA;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;EACnB,IAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;EAAA,IACIC,QAAQ,GAAGF,KAAK,CAACE,QADrB;EAAA,IAEIC,QAAQ,GAAGH,KAAK,CAACG,QAFrB;EAAA,IAGIC,SAAS,GAAGJ,KAAK,CAACI,SAHtB;EAAA,IAIIC,OAAO,GAAGL,KAAK,CAACK,OAJpB;EAAA,IAKIC,SAAS,GAAGN,KAAK,CAACM,SALtB;EAAA,IAMIC,OAAO,GAAGP,KAAK,CAACO,OANpB;EAAA,IAOIC,QAAQ,GAAGR,KAAK,CAACQ,QAPrB;EAAA,IAQIC,QAAQ,GAAGT,KAAK,CAACS,QARrB;EAAA,IASIC,MAAM,GAAGV,KAAK,CAACU,MATnB;EAAA,IAUIC,OAAO,GAAGX,KAAK,CAACW,OAVpB;EAAA,IAWIC,QAAQ,GAAGZ,KAAK,CAACY,QAXrB;EAAA,IAYIC,SAAS,GAAGb,KAAK,CAACa,SAZtB;EAAA,IAaIC,SAAS,GAAGd,KAAK,CAACc,SAbtB;EAAA,IAcIC,SAAS,GAAGf,KAAK,CAACe,SAdtB;EAAA,IAeIC,aAAa,GAAGhB,KAAK,CAACgB,aAf1B;EAgBA,IAAIC,OAAO,GAAGjC,EAAE,CAAC,IAAD,EAAOO,UAAU,CAACW,QAAD,EAAW,UAAX,CAAjB,EAAyCX,UAAU,CAACe,SAAD,EAAY,WAAZ,CAAnD,EAA6Ef,UAAU,CAACiB,QAAD,EAAW,UAAX,CAAvF,EAA+GjB,UAAU,CAACkB,QAAD,EAAW,UAAX,CAAzH,EAAiJlB,UAAU,CAACsB,SAAD,EAAY,WAAZ,CAA3J,EAAqLtB,UAAU,CAACuB,SAAD,EAAY,WAAZ,CAA/L,EAAyNtB,mBAAmB,CAACS,MAAD,EAAS,QAAT,CAA5O,EAAgQT,mBAAmB,CAACe,OAAD,EAAU,SAAV,CAAnR,EAAySf,mBAAmB,CAACkB,MAAD,EAAS,QAAT,CAA5T,EAAgVlB,mBAAmB,CAACmB,OAAD,EAAU,SAAV,CAAnW,EAAyXlB,eAAe,CAACmB,QAAD,EAAW,UAAX,CAAxY,EAAgalB,gBAAgB,CAACqB,SAAD,CAAhb,EAA6bpB,oBAAoB,CAACqB,aAAD,CAAjd,EAAkepB,YAAY,CAACS,OAAD,EAAU,QAAV,EAAoB,IAApB,CAA9e,EAAygB,MAAzgB,EAAihBD,SAAjhB,CAAhB;EACA,IAAIc,IAAI,GAAG7B,iBAAiB,CAACU,IAAD,EAAOC,KAAP,CAA5B;EACA,IAAImB,WAAW,GAAG/B,cAAc,CAACW,IAAD,EAAOC,KAAP,CAAhC;EACA,OAAO,aAAad,KAAK,CAACkC,aAAN,CAAoBD,WAApB,EAAiCpC,QAAQ,CAAC,EAAD,EAAKmC,IAAL,EAAW;IACtEd,SAAS,EAAEa;EAD2D,CAAX,CAAzC,EAEhBd,QAFgB,CAApB;AAGD;;AAEDJ,IAAI,CAACsB,YAAL,GAAoB,CAAC,IAAD,EAAO,QAAP,EAAiB,UAAjB,EAA6B,UAA7B,EAAyC,WAAzC,EAAsD,SAAtD,EAAiE,WAAjE,EAA8E,SAA9E,EAAyF,UAAzF,EAAqG,UAArG,EAAiH,QAAjH,EAA2H,SAA3H,EAAsI,UAAtI,EAAkJ,WAAlJ,EAA+J,WAA/J,EAA4K,WAA5K,EAAyL,eAAzL,CAApB;AACAtB,IAAI,CAACuB,MAAL,GAAczB,UAAd;AACAE,IAAI,CAACwB,GAAL,GAAWzB,OAAX;AACAC,IAAI,CAACyB,SAAL,GAAiBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;EACvD;EACAC,EAAE,EAAE3C,SAAS,CAAC4C,WAFyC;;EAIvD;EACA5B,MAAM,EAAEhB,SAAS,CAAC6C,SAAV,CAAoB,CAAC7C,SAAS,CAAC8C,IAAX,EAAiB9C,SAAS,CAAC+C,KAAV,CAAgB,CAAC,YAAD,CAAhB,CAAjB,CAApB,CAL+C;;EAOvD;EACA9B,QAAQ,EAAEjB,SAAS,CAAC8C,IARmC;;EAUvD;EACA5B,QAAQ,EAAElB,SAAS,CAACgD,IAXmC;;EAavD;EACA7B,SAAS,EAAEnB,SAAS,CAACiD,MAdkC;;EAgBvD;EACA7B,OAAO,EAAEpB,SAAS,CAAC+C,KAAV,CAAgB,GAAGG,MAAH,CAAU7C,GAAG,CAAC8C,MAAd,EAAsB,CAAC,OAAD,CAAtB,CAAhB,CAjB8C;;EAmBvD;EACA9B,SAAS,EAAErB,SAAS,CAAC8C,IApBkC;;EAsBvD;EACAxB,OAAO,EAAEtB,SAAS,CAAC6C,SAAV,CAAoB,CAAC7C,SAAS,CAAC8C,IAAX,EAAiB9C,SAAS,CAAC+C,KAAV,CAAgB,CAAC,YAAD,CAAhB,CAAjB,CAApB,CAvB8C;;EAyBvD;EACAxB,QAAQ,EAAEvB,SAAS,CAAC8C,IA1BmC;;EA4BvD;EACAtB,QAAQ,EAAExB,SAAS,CAAC8C,IA7BmC;;EA+BvD;EACArB,MAAM,EAAEzB,SAAS,CAAC6C,SAAV,CAAoB,CAAC7C,SAAS,CAAC8C,IAAX,EAAiB9C,SAAS,CAAC+C,KAAV,CAAgB,CAAC,cAAD,EAAiB,YAAjB,CAAhB,CAAjB,CAApB,CAhC+C;;EAkCvD;EACArB,OAAO,EAAE1B,SAAS,CAAC6C,SAAV,CAAoB,CAAC7C,SAAS,CAAC8C,IAAX,EAAiB9C,SAAS,CAAC+C,KAAV,CAAgB,CAAC,MAAD,CAAhB,CAAjB,CAApB,CAnC8C;;EAqCvD;EACApB,QAAQ,EAAEzB,eAAe,CAACkD,YAAhB,CAA6B,CAAC,UAAD,EAAa,qBAAb,EAAoC,QAApC,EAA8C,mBAA9C,EAAmE,QAAnE,EAA6E,mBAA7E,CAA7B,CAtC6C;;EAwCvD;EACAxB,SAAS,EAAE5B,SAAS,CAAC8C,IAzCkC;;EA2CvD;EACAjB,SAAS,EAAE7B,SAAS,CAAC8C,IA5CkC;;EA8CvD;EACAhB,SAAS,EAAE9B,SAAS,CAAC+C,KAAV,CAAgB1C,GAAG,CAACgD,eAApB,CA/C4C;;EAiDvD;EACAtB,aAAa,EAAE/B,SAAS,CAAC+C,KAAV,CAAgB1C,GAAG,CAACiD,mBAApB;AAlDwC,CAAxC,GAmDb,EAnDJ;AAoDA,eAAexC,IAAf"},"metadata":{},"sourceType":"module"}