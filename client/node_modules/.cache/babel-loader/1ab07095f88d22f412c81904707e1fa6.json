{"ast":null,"code":"import React,{useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{fetchStudent}from\"../../store/student-slice\";import{Routes,Route,useNavigate}from\"react-router-dom\";import History from\"./history/History\";import Profile from\"./profile/Profile\";import Billing from\"./billing/Billing\";import Announcement from\"./announcement/Announcement\";import Schedule from\"./schedule/Schedule\";import AddClasses from\"./add-classes/AddClasses\";import DropClasses from\"./drop-classes/DropClasses\";import Nav from\"./StudentNav\";import RegisteredClasses from\"./registered_next_year/RegisteredClasses\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Student(){/*TODO: fix styling in Nav.module.css \r\n\r\n    Add modal for small screens in Nav\r\n    add loading screen\r\n    return dynamic responses to the input fields on update of profile\r\n  */var dispatch=useDispatch();var student=useSelector(function(state){return state.user.userInfo;});var isNew=useSelector(function(state){return state.user.isNew;});var isLoading=useSelector(function(state){return state.user.loading;});var navigate=useNavigate();useEffect(function(){if(isNew){dispatch(fetchStudent(navigate));}},[dispatch,isNew,student,navigate]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Nav,{children:isLoading?/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}):/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Profile,{student:student})}),/*#__PURE__*/_jsx(Route,{path:\"/profile\",element:/*#__PURE__*/_jsx(Profile,{student:student})}),/*#__PURE__*/_jsx(Route,{path:\"/history\",element:/*#__PURE__*/_jsx(History,{previous_classes:student.previous_subjects_taken})}),/*#__PURE__*/_jsx(Route,{path:\"/billing\",element:/*#__PURE__*/_jsx(Billing,{})}),/*#__PURE__*/_jsx(Route,{path:\"/announcement\",element:/*#__PURE__*/_jsx(Announcement,{})}),/*#__PURE__*/_jsx(Route,{path:\"/schedule\",element:/*#__PURE__*/_jsx(Schedule,{current_classes:student.current_classes})}),/*#__PURE__*/_jsx(Route,{path:\"/registered\",element:/*#__PURE__*/_jsx(RegisteredClasses,{registered_classes:student.registering_next_year_classes})}),/*#__PURE__*/_jsx(Route,{path:\"/add-classes/*\",element:/*#__PURE__*/_jsx(AddClasses,{})}),/*#__PURE__*/_jsx(Route,{path:\"/drop-classes\",element:/*#__PURE__*/_jsx(DropClasses,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Profile,{student:student})})]})})});}export default Student;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchStudent","Routes","Route","useNavigate","History","Profile","Billing","Announcement","Schedule","AddClasses","DropClasses","Nav","RegisteredClasses","Student","dispatch","student","state","user","userInfo","isNew","isLoading","loading","navigate","previous_subjects_taken","current_classes","registering_next_year_classes"],"sources":["C:/webdev/school/school-online-project/client/src/components/student/Student.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchStudent } from \"../../store/student-slice\";\r\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\r\n\r\nimport History from \"./history/History\";\r\nimport Profile from \"./profile/Profile\";\r\nimport Billing from \"./billing/Billing\";\r\nimport Announcement from \"./announcement/Announcement\";\r\nimport Schedule from \"./schedule/Schedule\";\r\nimport AddClasses from \"./add-classes/AddClasses\";\r\nimport DropClasses from \"./drop-classes/DropClasses\";\r\nimport Nav from \"./StudentNav\";\r\nimport RegisteredClasses from \"./registered_next_year/RegisteredClasses\";\r\n\r\nfunction Student() {\r\n  /*TODO: fix styling in Nav.module.css \r\n\r\n    Add modal for small screens in Nav\r\n    add loading screen\r\n    return dynamic responses to the input fields on update of profile\r\n  */\r\n\r\n  const dispatch = useDispatch();\r\n  const student = useSelector((state) => state.user.userInfo);\r\n  const isNew = useSelector((state) => state.user.isNew);\r\n  const isLoading = useSelector((state) => state.user.loading);\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (isNew) {\r\n      dispatch(fetchStudent(navigate));\r\n    }\r\n  }, [dispatch, isNew, student, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <Nav>\r\n        {isLoading ? (\r\n          <div>Loading...</div>\r\n        ) : (\r\n          <Routes>\r\n            <Route path=\"/\" element={<Profile student={student} />} />\r\n            <Route path=\"/profile\" element={<Profile student={student} />} />\r\n            <Route\r\n              path=\"/history\"\r\n              element={\r\n                <History previous_classes={student.previous_subjects_taken} />\r\n              }\r\n            />\r\n            <Route path=\"/billing\" element={<Billing />} />\r\n            <Route path=\"/announcement\" element={<Announcement />} />\r\n            <Route\r\n              path=\"/schedule\"\r\n              element={<Schedule current_classes={student.current_classes} />}\r\n            />\r\n            <Route\r\n              path=\"/registered\"\r\n              element={\r\n                <RegisteredClasses\r\n                  registered_classes={student.registering_next_year_classes}\r\n                />\r\n              }\r\n            />\r\n            <Route path=\"/add-classes/*\" element={<AddClasses />} />\r\n            <Route path=\"/drop-classes\" element={<DropClasses />} />\r\n            <Route path=\"*\" element={<Profile student={student} />} />\r\n          </Routes>\r\n        )}\r\n      </Nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Student;\r\n"],"mappings":"AAAA,MAAOA,MAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,YAAT,KAA6B,2BAA7B,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,WAAxB,KAA2C,kBAA3C,CAEA,MAAOC,QAAP,KAAoB,mBAApB,CACA,MAAOC,QAAP,KAAoB,mBAApB,CACA,MAAOC,QAAP,KAAoB,mBAApB,CACA,MAAOC,aAAP,KAAyB,6BAAzB,CACA,MAAOC,SAAP,KAAqB,qBAArB,CACA,MAAOC,WAAP,KAAuB,0BAAvB,CACA,MAAOC,YAAP,KAAwB,4BAAxB,CACA,MAAOC,IAAP,KAAgB,cAAhB,CACA,MAAOC,kBAAP,KAA8B,0CAA9B,C,6IAEA,QAASC,QAAT,EAAmB,CACjB;AACF;AACA;AACA;AACA;AACA,IAEE,GAAMC,SAAQ,CAAGhB,WAAW,EAA5B,CACA,GAAMiB,QAAO,CAAGhB,WAAW,CAAC,SAACiB,KAAD,QAAWA,MAAK,CAACC,IAAN,CAAWC,QAAtB,EAAD,CAA3B,CACA,GAAMC,MAAK,CAAGpB,WAAW,CAAC,SAACiB,KAAD,QAAWA,MAAK,CAACC,IAAN,CAAWE,KAAtB,EAAD,CAAzB,CACA,GAAMC,UAAS,CAAGrB,WAAW,CAAC,SAACiB,KAAD,QAAWA,MAAK,CAACC,IAAN,CAAWI,OAAtB,EAAD,CAA7B,CACA,GAAMC,SAAQ,CAAGnB,WAAW,EAA5B,CACAN,SAAS,CAAC,UAAM,CACd,GAAIsB,KAAJ,CAAW,CACTL,QAAQ,CAACd,YAAY,CAACsB,QAAD,CAAb,CAAR,CACD,CACF,CAJQ,CAIN,CAACR,QAAD,CAAWK,KAAX,CAAkBJ,OAAlB,CAA2BO,QAA3B,CAJM,CAAT,CAMA,mBACE,sCACE,KAAC,GAAD,WACGF,SAAS,cACR,mCADQ,cAGR,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,OAAO,cAAE,KAAC,OAAD,EAAS,OAAO,CAAEL,OAAlB,EAAzB,EADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,CAAuB,OAAO,cAAE,KAAC,OAAD,EAAS,OAAO,CAAEA,OAAlB,EAAhC,EAFF,cAGE,KAAC,KAAD,EACE,IAAI,CAAC,UADP,CAEE,OAAO,cACL,KAAC,OAAD,EAAS,gBAAgB,CAAEA,OAAO,CAACQ,uBAAnC,EAHJ,EAHF,cASE,KAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,CAAuB,OAAO,cAAE,KAAC,OAAD,IAAhC,EATF,cAUE,KAAC,KAAD,EAAO,IAAI,CAAC,eAAZ,CAA4B,OAAO,cAAE,KAAC,YAAD,IAArC,EAVF,cAWE,KAAC,KAAD,EACE,IAAI,CAAC,WADP,CAEE,OAAO,cAAE,KAAC,QAAD,EAAU,eAAe,CAAER,OAAO,CAACS,eAAnC,EAFX,EAXF,cAeE,KAAC,KAAD,EACE,IAAI,CAAC,aADP,CAEE,OAAO,cACL,KAAC,iBAAD,EACE,kBAAkB,CAAET,OAAO,CAACU,6BAD9B,EAHJ,EAfF,cAuBE,KAAC,KAAD,EAAO,IAAI,CAAC,gBAAZ,CAA6B,OAAO,cAAE,KAAC,UAAD,IAAtC,EAvBF,cAwBE,KAAC,KAAD,EAAO,IAAI,CAAC,eAAZ,CAA4B,OAAO,cAAE,KAAC,WAAD,IAArC,EAxBF,cAyBE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,OAAO,cAAE,KAAC,OAAD,EAAS,OAAO,CAAEV,OAAlB,EAAzB,EAzBF,GAJJ,EADF,EADF,CAqCD,CAED,cAAeF,QAAf"},"metadata":{},"sourceType":"module"}